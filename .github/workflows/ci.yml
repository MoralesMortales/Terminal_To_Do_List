name: Cross-Platform CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [g++, clang++, cl]
        exclude:
          - os: windows-latest
            compiler: clang++
          - os: macos-latest
            compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set up Visual Studio Build Tools (Windows only)
      if: runner.os == 'Windows'
      run: |
        choco install visualstudio2019buildtools --version 16.11.8 -y
        choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System' -y

    - name: Setup environment
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          sudo apt-get update -qq
          sudo apt-get install -y --quiet build-essential
          [ "${{ matrix.compiler }}" = "clang++" ] && sudo apt-get install -y --quiet clang
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          brew update --quiet
          [ "${{ matrix.compiler }}" = "clang++" ] && brew install --quiet llvm
        fi

    - name: Configure CMake
      shell: bash
      run: |
        mkdir -p build
        cd build
        if [ "${{ runner.os }}" = "Windows" ]; then
          cmake .. -G "Visual Studio 17 2022" -A x64
        else
          cmake .. -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
        fi

    - name: Build
      shell: bash
      run: |
        cd build
        cmake --build . --config Release

    - name: Verify executable
      shell: bash
      run: |
        cd build
        if [ "${{ runner.os }}" = "Windows" ]; then
          if [ ! -f "Release/ToDoApp.exe" ]; then
            echo "Windows executable missing!"
            exit 1
          fi
        else
          if [ ! -f "ToDoApp" ]; then
            echo "Executable missing!"
            exit 1
          fi
        fi
