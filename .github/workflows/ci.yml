name: Cross-Platform CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [g++, clang++, cl]
        exclude:
          - os: windows-latest
            compiler: clang++
          - os: macos-latest
            compiler: cl
          - os: windows-latest
            compiler: g++

    steps:
    - uses: actions/checkout@v4

    - name: Setup environment
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          sudo apt-get update
          sudo apt-get install -y build-essential
          [ "${{ matrix.compiler }}" = "clang++" ] && sudo apt-get install -y clang
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          brew update
          [ "${{ matrix.compiler }}" = "clang++" ] && brew install llvm
        fi

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        if [ "${{ runner.os }}" = "Windows" ]; then
          cmake .. -G "Visual Studio 16 2019" -A x64
        else
          cmake .. -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
        fi

    - name: Build
      run: |
        cd build
        cmake --build . --config Release

    - name: Verify executable
      run: |
        cd build
        if [ "${{ runner.os }}" = "Windows" ]; then
          [ -f "Release/ToDoApp.exe" ] || (echo "Windows executable missing!" && exit 1)
        else
          [ -f "ToDoApp" ] || (echo "Unix executable missing!" && exit 1)
        fi
