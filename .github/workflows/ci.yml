name: Cross-Platform CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [g++, clang++, cl]
        exclude:
          - os: windows-latest
            compiler: clang++
          - os: macos-latest
            compiler: cl
          - os: windows-latest
            compiler: g++

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup environment
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          sudo apt-get update
          sudo apt-get install -y build-essential
          if [[ "${{ matrix.compiler }}" == "clang++" ]]; then
            sudo apt-get install -y clang
          fi
        elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
          brew update
          if [[ "${{ matrix.compiler }}" == "clang++" ]]; then
            brew install llvm
          fi
        fi

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cmake .. -G "Visual Studio 16 2019" -A x64
        else
          cmake .. -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
        fi

    - name: Build
      run: |
        cd build
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          cmake --build . --config Release
        else
          cmake --build .
        fi

    - name: Verify executable
      run: |
        cd build
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          if [[ -f "Release/ToDoApp.exe" ]]; then
            echo "Windows executable exists"
          else
            echo "Windows executable not found!"
            exit 1
          fi
        else
          if [[ -f "ToDoApp" ]]; then
            echo "Unix executable exists"
          else
            echo "Unix executable not found!"
            exit 1
          fi
        fi
