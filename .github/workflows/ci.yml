name: Cross-Platform CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [g++, clang++, cl]
        exclude:
          - os: windows-latest
            compiler: clang++
          - os: macos-latest
            compiler: cl

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        shell: bash
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            sudo apt-get update
            sudo apt-get install -y build-essential cmake
            [ "${{ matrix.compiler }}" = "clang++" ] && sudo apt-get install -y clang
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            brew update
            brew install cmake
            [ "${{ matrix.compiler }}" = "clang++" ] && brew install llvm
          fi

      - name: Create build directory
        run: mkdir build

      - name: Configure CMake
        run: |
          cd build
          if [ "${{ runner.os }}" = "Windows" ]; then
            cmake .. -G "Visual Studio 16 2019" -A x64
          else
            cmake .. -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
          fi

      - name: Build project
        run: |
          cd build
          cmake --build . --config Release

      - name: Verify executable
        run: |
          cd build
          if [ "${{ runner.os }}" = "Windows" ]; then
            if [ ! -f "Release/ToDoApp.exe" ]; then echo "Executable not found!"; exit 1; fi
          else
            if [ ! -f "ToDoApp" ]; then echo "Executable not found!"; exit 1; fi
          fi
